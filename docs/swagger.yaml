basePath: /api
definitions:
  handlers.ChangePasswordRequest:
    properties:
      current_password:
        type: string
      new_password:
        minLength: 6
        type: string
    required:
    - current_password
    - new_password
    type: object
  handlers.CreateCompanyRequest:
    properties:
      address:
        maxLength: 255
        type: string
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      phone:
        maxLength: 20
        minLength: 10
        type: string
    required:
    - email
    - name
    type: object
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handlers.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  handlers.UpdateCompanyRequest:
    properties:
      address:
        maxLength: 255
        type: string
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      phone:
        maxLength: 20
        minLength: 10
        type: string
    type: object
  handlers.UpdateProfileRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API para gerenciamento de usuários e empresas com autenticação JWT
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: EzTest API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna tokens JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login realizado com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Credenciais inválidas
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      summary: Fazer login
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Realiza logout do usuário (remove token no frontend)
      produces:
      - application/json
      responses:
        "200":
          description: Logout realizado com sucesso
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Fazer logout
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Renova o token de acesso usando refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token renovado com sucesso
          schema:
            additionalProperties: true
            type: object
        "501":
          description: Funcionalidade não implementada
          schema:
            additionalProperties: true
            type: object
      summary: Renovar token de acesso
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Cria uma nova conta de usuário no sistema
      parameters:
      - description: Dados do usuário
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário registrado com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Usuário já existe
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      summary: Registrar novo usuário
      tags:
      - auth
  /companies:
    get:
      consumes:
      - application/json
      description: Retorna uma lista paginada de empresas
      parameters:
      - default: 10
        description: Limite de resultados
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de empresas
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar empresas
      tags:
      - companies
    post:
      consumes:
      - application/json
      description: Cria uma nova empresa no sistema
      parameters:
      - description: Dados da empresa
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateCompanyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Empresa criada com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Criar nova empresa
      tags:
      - companies
  /companies/{id}:
    delete:
      consumes:
      - application/json
      description: Remove uma empresa do sistema
      parameters:
      - description: ID da empresa
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Empresa deletada com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Deletar empresa
      tags:
      - companies
    get:
      consumes:
      - application/json
      description: Retorna os dados de uma empresa específica pelo ID
      parameters:
      - description: ID da empresa
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dados da empresa
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Empresa não encontrada
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Obter empresa por ID
      tags:
      - companies
    put:
      consumes:
      - application/json
      description: Atualiza os dados de uma empresa existente
      parameters:
      - description: ID da empresa
        in: path
        name: id
        required: true
        type: string
      - description: Dados para atualização
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Empresa atualizada com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Atualizar empresa
      tags:
      - companies
  /users:
    get:
      consumes:
      - application/json
      description: Retorna uma lista paginada de usuários
      parameters:
      - default: 10
        description: Limite de resultados
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de usuários
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar usuários
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Retorna os dados de um usuário específico pelo ID
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dados do usuário
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Usuário não encontrado
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Obter usuário por ID
      tags:
      - users
  /users/change-password:
    post:
      consumes:
      - application/json
      description: Altera a senha do usuário autenticado
      parameters:
      - description: Dados para alteração de senha
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Senha alterada com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Usuário não autenticado
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Alterar senha do usuário
      tags:
      - users
  /users/profile:
    delete:
      consumes:
      - application/json
      description: Remove a conta do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: Perfil deletado com sucesso
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Usuário não autenticado
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Deletar perfil do usuário
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retorna os dados do perfil do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: Perfil do usuário
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Usuário não autenticado
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Usuário não encontrado
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Obter perfil do usuário
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Atualiza os dados do perfil do usuário autenticado
      parameters:
      - description: Dados para atualização
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Perfil atualizado com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Usuário não autenticado
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Atualizar perfil do usuário
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Digite 'Bearer ' seguido do seu token JWT
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
